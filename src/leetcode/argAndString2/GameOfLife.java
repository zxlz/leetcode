package leetcode.argAndString2;

/**
 * 生命游戏
根据百度百科，生命游戏，简称为生命，是英国数学家约翰·何顿·康威在1970年发明的细胞自动机。

给定一个包含 m × n 个格子的面板，每一个格子都可以看成是一个细胞。每个细胞具有一个初始状态 live（1）即为活细胞， 或 dead（0）即为死细胞。每个细胞与其八个相邻位置（水平，垂直，对角线）的细胞都遵循以下四条生存定律：

如果活细胞周围八个位置的活细胞数少于两个，则该位置活细胞死亡；
如果活细胞周围八个位置有两个或三个活细胞，则该位置活细胞仍然存活；
如果活细胞周围八个位置有超过三个活细胞，则该位置活细胞死亡；
如果死细胞周围正好有三个活细胞，则该位置死细胞复活；
根据当前状态，写一个函数来计算面板上细胞的下一个（一次更新后的）状态。
下一个状态是通过将上述规则同时应用于当前状态下的每个细胞所形成的，其中细胞的出生和死亡是同时发生的。
输入: 
[
  [0,1,0],
  [0,0,1],
  [1,1,1],
  [0,0,0]
]
输出: 
[
  [0,0,0],
  [1,0,1],
  [0,1,1],
  [0,1,0]
]
 * @author zxl
 *使用倒数第二个 bit 表示下一个状态。
 *更新完后将所有位置的数字右移一位。
 */
public class GameOfLife {
    public void gameOfLife(int[][] board) {
    	int rows=board.length;
    	int columns=board[0].length;
    	for (int i = 0; i < rows; i++) {
			for (int j = 0; j < columns; j++) {
				//同一行当前格和上一个格子的上,右上,右,右下,下是重合的，可以记录不必算，
				//测试用例数据不多0ms先不改
				int c=0;
				if(i-1>=0 && j-1>=0)		c+=board[i-1][j-1]&1;//左上
				if(j-1>=0)					c+=board[i][j-1]&1;	//左
				if(i+1<rows && j-1>=0)		c+=board[i+1][j-1]&1;	//左下
				if(i+1<rows)				c+=board[i+1][j]&1;	//下
				if(i+1<rows&& j+1<columns)	c+=board[i+1][j+1]&1;	//右下
				if( j+1<columns)			c+=board[i][j+1]&1;	//右
				if(i-1>=0&& j+1<columns)	c+=board[i-1][j+1]&1;	//右上
				if(i-1>=0)					c+=board[i-1][j]&1;	//上
				if(((board[i][j]&1)==1&&c==2)||c==3)board[i][j]+=2;//倒数第二位设为1
				
			}
		}
    	for (int i = 0; i < rows; i++) {
			for (int j = 0; j < columns; j++) {
				board[i][j] >>=1;
			}
    	}
    }
}
